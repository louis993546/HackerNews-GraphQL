type Story {
    id: ID!
    by: User!
    score: Int!
    url: String!
    title: String!
    time: Timestamp!
    comments: [Comment!]!
    commentCount: Int!
}

scalar Time

type Timestamp {
    iso8601: Time!
    unixTime: Int!
}

type User {
    id: String! # this can't be the normal ID because gqlgen can't tell this one is string, not int
    about: String!
    karma: Int!
    createdAt: Timestamp!
    # delay
    submitted: [Item!]!
}

type Comment {
    id: ID!
    by: User!
    time: Timestamp!
}

type UnknownItem {
    by: String!
    id: ID!
    type: String!
    time: Int!
    descendants: Int
    kids: [Int!]
    score: Int
    title: String
    url: String
    parent: Int
    text: String
    parts: [Int]
    poll: Int
}

union Item = Story | Comment | UnknownItem

type Query {
    story(id: ID!): Story!
}